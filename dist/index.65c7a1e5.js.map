{"mappings":"AAAA,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAM;AAExC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAO;AAE1C,GAAG,CAAC,MAAM,GAAE,QAAQ,CAAC,aAAa,CAAC,CAAQ;AAC3C,GAAG,CAAC,CAAC,GAAG,CAAC;AACT,GAAG,CAAC,OAAO,GAAE,CAAE;AAEf,GAAG,CAAC,MAAM,IAAG,kvCAsDb;AACA,GAAG,CAAC,IAAI,OAAK,CAAC;IAET,EAAE,EAAC,MAAM,CAAC,CAAC,MAAI,CAAG,IAChB,OAAO,IAAG,CAAO;SACb,EAAE,EAAC,MAAM,CAAC,CAAC,MAAI,CAAI,KACxB,OAAO,IAAE,CAAM;SAEd,OAAO,IAAE,MAAM,CAAC,CAAC;IAEnB,UAAU,KAAK,CAAC;QACd,EAAE,EAAC,CAAC,GAAC,MAAM,CAAC,MAAM,GAAC,CAAC,EAAC,CAAC;YACtB,CAAC,IAAE,CAAC;YACJ,KAAK,CAAC,SAAS,GAAC,OAAO;YACvB,MAAM,CAAC,SAAS,GAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC;YACrC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI;YACtB,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAC,IAAI;YACrB,IAAI;QACN,CAAC;IAAA,CAAC,EAAC,CAAC;AACT,CAAC;AACD,IAAI,EAIA,CAAiB,AAAjB,EAAiB,AAAjB,eAAiB;AACf,CAAmB,AAAnB,EAAmB,AAAnB,iBAAmB;AACnB,CAA2B,AAA3B,EAA2B,AAA3B,yBAA2B;AAC3B,CAA2B,AAA3B,EAA2B,AAA3B,yBAA2B;AAC3B,CAAwB,AAAxB,EAAwB,AAAxB,sBAAwB;AACxB,CAAqB,AAArB,EAAiC,AAAjC,+BAAiC;AACrB,CAAoB,AAAhC,EAAgC,AAAhC,8BAAgC;AAChC,CAAyB,AAAzB,EAAyB,AAAzB,uBAAyB;AACzB,CAAoB,AAApB,EAAgC,AAAhC,8BAAgC;AACpB,CAAL,AAAP,EAAO,AAAP,KAAO;AACP,CAAW,AAAX,EAAW,AAAX,SAAW;AACX,CAAoC,AAApC,EAAoC,AAApC,kCAAoC;AACpC,CAAmB,AAAnB,EAAqC,AAArC,mCAAqC;AACnB,CAAX,AAAP,EAAO,AAAP,KAAO;AAEb,CAAwC,AAAxC,EAAwC,AAAxC,sCAAwC;AAExC,CAAyC,AAAzC,EAAyC,AAAzC,uCAAyC;AACvC,CAAiB,AAAjB,EAAiB,AAAjB,eAAiB;AACjB,CAAmB,AAAnB,EAAmB,AAAnB,iBAAmB;AACnB,CAAyB,AAAzB,EAAyB,AAAzB,uBAAyB;AACzB,CAAsB,AAAtB,EAAsB,AAAtB,oBAAsB;AACtB,CAAa,AAAb,EAAa,AAAb,WAAa;AACb,CAA8C,AAA9C,EAA8C,AAA9C,4CAA8C;AAC9C,CAAe,AAAf,EAAe,AAAf,aAAe;AACf,CAAY,AAAZ,EAAY,AAAZ,UAAY;AACZ,CAAU,AAAV,EAAU,AAAV,QAAU;AACV,CAAK,AAAL,EAAK,AAAL,GAAK;AACL,CAAI,AAAJ,EAAI,AAAJ,EAAI;AAWN,CAAyC,AAAzC,EAAyC,AAAzC,uCAAyC;AAEzC,CAAgB,AAAhB,EAAoB,AAApB,kBAAoB;AAChB,CAA4C,AAAhD,EAAgD,AAAhD,sIAAgD","sources":["src/main.js"],"sourcesContent":["let $btn = document.querySelector('#btn');\r\n\r\nlet $html = document.querySelector(\"#demo\");\r\n\r\nlet $style= document.querySelector('#style')\r\nlet n = 0;\r\nlet string2 ='';\r\n\r\nlet string =`/*你好,我是前端初学者,希望多多指教.\r\n请看看我的简历,多谢!\r\n现在我打算画个太极:*/\r\n#div1{\r\n  width:200px;\r\n  height:200px;\r\n  border: 1px solid black;\r\n}\r\n/*首先把div变成一个圆圈*/\r\n/* 八卦,背景渐变获取背景半黑半白*/\r\n#div1{\r\n  border-radius:50%;\r\n  box-shadow:0 0 5px 0 rgba(0,0,0,0.3);\r\n  border:none;\r\n  background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/*加2个黑白球体*/\r\n#div1::before{\r\n  content:'';\r\n  display:block;\r\n  width:100px;\r\n  height:100px;\r\n  position:absolute;\r\n  top:0;\r\n  left:50%;\r\n  transform:translateX(-50%);\r\n  border-radius:50%;\r\n  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\ncontent:'';\r\nwidth:100px;\r\nheight:100px;\r\ndisplay:block;\r\nposition:absolute;\r\nbottom:0;\r\nleft:50%;\r\ntransform:translateX(-50%);\r\nborder-radius:50%;\r\nbackground: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 26%, \r\nrgba(255,255,255,1) 100%);\r\n}\r\n/*太极图转动*/\r\n#div1{\r\n  animation:3s linear 1s infinite tai\r\n}\r\n@keyframes  tai{\r\n  from{\r\n    transform:rotate(0);\r\n  }\r\n  to{\r\n    transform:rotate(360deg);\r\n}\r\n  \r\n`  \r\nlet step=()=>{\r\n     \r\n     if(string[n]===' '){\r\n       string2 +='&nbsp'\r\n     }else if(string[n]==='\\n'){\r\n      string2+='<br>'\r\n     }else {\r\n       string2+=string[n]\r\n     }\r\n     setTimeout(()=>{\r\n       if(n<string.length-1){\r\n       n+=1;\r\n       $html.innerHTML=string2\r\n       $style.innerHTML=string.substring(0,n)\r\n       window.scrollTo(0,9999)\r\n       $html.scrollTo(0,9999)\r\n       step();\r\n     }},0)\r\n}\r\nstep() \r\n\r\n\r\n\r\n    // let step=()=>{\r\n      //   console.log(n)\r\n      //     console.log(string2)\r\n      //    if(string[n]==='\\n'){\r\n      //     string2 += '<br>'\r\n      //       //若是回车就加<br>\r\n      //    }else if(string[n]===' '){\r\n      //     string2 += '&nbsp'\r\n      //     //若是空格就加$nbsp\r\n      //    }\r\n      //    else{\r\n      //      string2 =string2 + string[n]\r\n      //      //空格回车都没就照搬\r\n      //    }\r\n\r\n// string = string.replace(/\\n/g,'<br>')\r\n \r\n// string = string.replace(/\\s/g,'&nbsp')\r\n  // let step=()=>{\r\n  //   console.log(n)\r\n  //  if (n<string.length){\r\n  //    setTimeout(()=>{\r\n  //      n+=1;\r\n  //      demo.innerHTML=string.substring(0,n) ;\r\n  //      step();\r\n  //    },100)\r\n  //  }else{\r\n  //  }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// demo.innerHTML=string.substring(0,n) ;\r\n\r\n//substring() 方法\r\n//返回一个字符串在开始索引到结束索引之间的一个子集, 或从开始索引直到字符串的末尾的一个子集。\r\n\r\n  \r\n\r\n"],"names":[],"version":3,"file":"index.65c7a1e5.js.map","sourceRoot":"/__parcel_source_root/"}